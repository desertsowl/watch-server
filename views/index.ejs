<!DOCTYPE html>
<html lang="ja">
<head>
    <title>AP監視ページ</title>
    <meta charset=UTF-8>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="cache-control" content="no-cache">
    <meta http-equiv="expires" content="0">
    <meta http-equiv="Content-Style-Type" content="text/css">
  <!--   <meta http-equiv="refresh" content="60; URL="> -->
    
    <style>
        * {
            margin: 0;
            padding: 0;
            font-size: 2vw;
        }

        body {
            font-family: 'anton', sans-serif;
             letter-spacing: -0.03em;
        }

        table#header {
            width: 100%;
        }

        table#header td#title {
            font-weight: 900;
            font-size: 1.0em;
            line-height: 1.1em;
        }

        table#header td.chart {
            font-weight: 600;
            width: 2.2vw;
            text-align: center;
            font-size: 1.1em;
            line-height: 0.8em;
        }

        .lv0 { background-color: #9FA8DA; }
        .lv1 { background-color: #80CBC4; }
        .lv2 { background-color: #81C784; }
        .lv3 { background-color: #AED581; }
        .lv4 { background-color: #D4E157; }
        .lv5 { background-color: #FFEB3B; }
        .lv6 { background-color: #FFCA28; }
        .lv7 { background-color: #FFA726; }
        .lv8 { background-color: #FF7043; }
        .lv9 { background-color: #EF5350; }
        .lv10 { background-color: #C0211D; }

        /* アクセスポイント情報テーブル */
        table#info_ap {
            margin: auto;
            width: 93%;
            height: auto;
          /*  white-space: normal; */
            white-space: nowrap;
        }

        table#info_ap td {
            vertical-align: top;
            text-align: center;
            border: solid 1px black;
            background-color: #ccc;
            width: 10%;
            height: 50%;
        }

        /* アクセスポイントの情報 */
        table#info_ap td div.info_ap {
            line-height: 0.4em;
            padding:0.1em 0.1em 0.4em 0.1em;
        }
        
        table#info_ap td span.ap_name {
            color: rgba(0, 0, 0, 0.5);
            font-weight: 900;
            font-size: 0.7em;
            line-height: 0.1em;
            word-wrap: break-word; /* 単語内でも折り返しを許可 */
            word-break: break-all; /* 必要に応じて単語を分割 */
        }

        table#info_ap td span.radio {
            color: rgba(0, 0, 0, 0.6);
            font-size: 0.5em;
            line-height: 0.2em;
        }

        table#info_ap td div.info_ssid {
            width: 100%;
            padding:0 0 0 0;
            text-align: center;
            line-height: 0.8em;
            overflow: visible; /* はみ出した内容を表示 */
            white-space: nowrap;
        }

        table#info_ap td span.ssid_name {
            align-items: center;
            font-size: 0.7em;
            font-weight: 700;
            line-height: 0.3em;
        }

        table#info_ap td span.maxcount {
            color: rgba(0, 0, 0, 0.7);
            font-size: 0.5em;
        }

        table#info_ap td span.cnt {
            font-size: 2.0em;
            font-weight: 900;
            line-height: 0.8em;
            text-align: center;
        }

        /* DHCP情報表示のスタイル */
        #infobar {
            position: fixed; 
            bottom: 0; 
            right: 0; 
            width: 100%; 
            background-color: #f0f0f0; 
            border-top: 1px solid #ccc;
        }
        
        #dhcp-info {
            text-align: left; 
            padding: 5px 10px; 
            font-weight: bold;
            border-radius: 4px;
            margin-left: 5px;
            font-size: 0.7em;
        }
        
        #dhcp-info .value {
            font-size: 1.1em;
        }
        
        #network-info {
            text-align: left;
            padding: 5px 10px;
            font-size: 0.7em;
            font-weight: bold;
        }
        
        #ptime {
            text-align: right; 
            padding: 5px;
            font-size: 0.7em;
            font-weight: bold;
        }

    </style>
</head>

<body>   
    <table id="header">
        <tr>
            <td id="title">§&nbsp;WiFi AP Heatmap</td>
            <% for(let i = 0; i <= 10; i++) { %>
                <td class="chart lv<%= i %>"><%= i %></td>
            <% } %>
        </tr>
    </table>

    <input type="hidden" id="mtime" value="<%= mtime %>">
    <table id="info_ap">
        <% for(let row = 0; row < 2; row++) { %>
            <tr>
                <% for(let col = 0; col < 8; col++) { %>
                    <% const ap = aps[row * 8 + col] || { name: `ap_${String(row * 8 + col + 1).padStart(2, '0')}`, channel: '-', power: '-', level: 0, ssids: [] }; %>
                    <td class="ap lv<%= ap.level || 0 %>" data-ap="<%= ap.name %>">
                        <div class="info_ap">
                            <span class="ap_name"><%= ap.name %></span>
                            <span class="radio"><%= ap.channel %>ch/<%= ap.power %>dBm</span>
                        </div>
                            <% if(ap.ssids && ap.ssids.length > 0) { %>
                                <% ap.ssids.forEach(function(ssid) { %>
                                    <div class="info_ssid lv<%= ssid.level || 0 %>">
                                    <span class="ssid_name"><%= ssid.name %></span>
                                    <span class="maxcount">(<%= ssid.maxCount || 0 %>台)</span>
                                    <br style="line-height:0.1em;">
                                        <span class="cnt"><%= ssid.count || 0 %><span>台</span>
                                    </div>
                                <% }); %>
                            <% } %>
                    </td>
                <% } %>
            </tr>
        <% } %>
    </table>

    <script>
        const modified = document.getElementById("mtime");
        const modified_sec = modified.value;
        let present_sec = Date.now();
        present_sec = Math.trunc(present_sec / 1000);
        const elapsed = present_sec - modified_sec;
        
        if (elapsed > 300) {
            document.write(`<p style="font-size:4em; font-weight:900; color:#c00; text-align:center; line-height:1em;">Update Error</p>`);
        }
        document.close;
    </script>
    
    <!-- 最終更新時刻を表示するテーブル -->
    <table id="infobar">
        <tr>
            <% 
            // DHCP使用率に基づいてレベルを計算
            const dhcpLevel = Math.min(Math.ceil(dhcpUtilization / 10), 10);
            %>
            <td id="dhcp-info" class="lv<%= dhcpLevel %>">
                DHCP Pool: <span class="value"><%= dhcpUtilization.toFixed(2) %>%</span>
            </td>
            <td id="network-info">
                <%= networkInfo %>
            </td>
            <td id="ptime">
                <%= new Date(mtime * 1000).toLocaleString('ja-JP', {year: 'numeric', month: '2-digit', day: '2-digit', weekday: 'short', hour: '2-digit', minute: '2-digit', second: '2-digit'}) %>
            </td>
        </tr>
    </table>
    
    <!-- WebSocket接続用のスクリプトを読み込む -->
    <script src="/js/main.js"></script>
    
</body>
</html> 
